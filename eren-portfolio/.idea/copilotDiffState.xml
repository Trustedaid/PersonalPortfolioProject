<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/app/components/Education.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/components/Education.tsx" />
              <option name="originalContent" value="import { FaUniversity, FaGraduationCap, FaUsers } from &quot;react-icons/fa&quot;;&#10;&#10;const education = [&#10;  {&#10;    degree: &quot;Lisans&quot;,&#10;    status: &quot;Mezun&quot;,&#10;    field: &quot;Elektrik-Elektronik Mühendisliği (İngilizce)&quot;,&#10;    school: &quot;İstanbul Bilgi Üniversitesi&quot;,&#10;    location: &quot;İstanbul, Türkiye&quot;,&#10;    date: &quot;2014 - 2022&quot;,&#10;    gpa: &quot;2.57/4.00 GPA&quot;,&#10;    description: &quot;&quot;,&#10;    icon: &lt;FaGraduationCap className=&quot;w-7 h-7 text-purple-600&quot; /&gt;,&#10;  },&#10;];&#10;&#10;const communities = [&#10;  {&#10;    role: &quot;&quot;,&#10;    org: &quot;&quot;,&#10;    date: &quot;Eylül 2020 - Nisan 2022&quot;,&#10;    achievements: [&#10;      &quot;falan filan&quot;,&#10;      &quot;şöyle böyle&quot;,&#10;      &quot;Zırt zurt&quot;,&#10;      &quot;ondan bundan biraz&quot;,&#10;    ],&#10;    icon: &lt;FaUsers className=&quot;w-6 h-6 text-pink-500&quot; /&gt;,&#10;  },&#10;];&#10;&#10;export default function Education() {&#10;  return (&#10;    &lt;section id=&quot;education&quot; className=&quot;relative w-full min-h-[60vh] flex flex-col items-center justify-center py-20 px-4 bg-white/80 dark:bg-zinc-900/80 overflow-hidden&quot;&gt;&#10;      &lt;div className=&quot;relative z-10 w-full max-w-4xl mx-auto flex flex-col items-center&quot;&gt;&#10;        &lt;h2 className=&quot;text-3xl sm:text-4xl font-extrabold bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 bg-clip-text text-transparent mb-4 text-center drop-shadow-lg&quot;&gt;&#10;          Eğitim Hayatım&#10;        &lt;/h2&gt;&#10;        &lt;p className=&quot;text-lg text-gray-700 dark:text-zinc-200 mb-10 text-center max-w-2xl&quot;&gt;&#10;          Akademik geçmişim, sertifikalarım ve eğitim faaliyetlerim&#10;        &lt;/p&gt;&#10;        &lt;div className=&quot;flex flex-col gap-10 w-full&quot;&gt;&#10;          {education.map((edu, idx) =&gt; (&#10;            &lt;div key={idx} className=&quot;bg-white/90 dark:bg-zinc-900/90 rounded-2xl shadow-xl p-8 flex flex-col md:flex-row md:items-center gap-6 md:gap-10 border border-zinc-100 dark:border-zinc-800&quot;&gt;&#10;              &lt;div className=&quot;flex-shrink-0 flex items-center justify-center mb-4 md:mb-0&quot;&gt;&#10;                {edu.icon}&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex-1 flex flex-col gap-1&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-blue-700 dark:text-blue-300 mb-1&quot;&gt;{edu.degree} &lt;span className=&quot;text-sm font-semibold text-zinc-500 dark:text-zinc-400 ml-2&quot;&gt;{edu.status}&lt;/span&gt;&lt;/h3&gt;&#10;                &lt;div className=&quot;flex flex-wrap items-center gap-2 mb-2&quot;&gt;&#10;                  &lt;span className=&quot;font-semibold text-zinc-700 dark:text-zinc-200&quot;&gt;{edu.field}&lt;/span&gt;&#10;                  &lt;span className=&quot;text-xs px-2 py-1 rounded bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 font-semibold&quot;&gt;{edu.school}&lt;/span&gt;&#10;                  &lt;span className=&quot;text-xs px-2 py-1 rounded bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-200 font-semibold&quot;&gt;{edu.location}&lt;/span&gt;&#10;                  &lt;span className=&quot;text-xs px-2 py-1 rounded bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-200 font-semibold&quot;&gt;{edu.date}&lt;/span&gt;&#10;                  &lt;span className=&quot;text-xs px-2 py-1 rounded bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 font-semibold&quot;&gt;GPA: {edu.gpa}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;p className=&quot;text-zinc-700 dark:text-zinc-200 mb-2&quot;&gt;{edu.description}&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;        &lt;h3 className=&quot;text-2xl font-bold mt-14 mb-6 text-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 bg-clip-text text-transparent drop-shadow-lg&quot;&gt;Topluluk Faaliyetleri&lt;/h3&gt;&#10;        &lt;div className=&quot;flex flex-col gap-8 w-full&quot;&gt;&#10;          {communities.map((com, idx) =&gt; (&#10;            &lt;div key={idx} className=&quot;bg-white/90 dark:bg-zinc-900/90 rounded-2xl shadow p-6 flex flex-col md:flex-row md:items-center gap-4 md:gap-8 border border-zinc-100 dark:border-zinc-800&quot;&gt;&#10;              &lt;div className=&quot;flex-shrink-0 flex items-center justify-center mb-2 md:mb-0&quot;&gt;&#10;                {com.icon}&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex-1 flex flex-col gap-1&quot;&gt;&#10;                &lt;h4 className=&quot;text-lg font-bold text-blue-700 dark:text-blue-300 mb-1&quot;&gt;{com.role}&lt;/h4&gt;&#10;                &lt;span className=&quot;font-semibold text-zinc-700 dark:text-zinc-200 mb-1&quot;&gt;{com.org}&lt;/span&gt;&#10;                &lt;span className=&quot;text-xs px-2 py-1 rounded bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-200 font-semibold mb-2&quot;&gt;{com.date}&lt;/span&gt;&#10;                &lt;ul className=&quot;list-disc pl-6 text-zinc-700 dark:text-zinc-200 space-y-1&quot;&gt;&#10;                  {com.achievements.map((ach, i) =&gt; (&#10;                    &lt;li key={i}&gt;{ach}&lt;/li&gt;&#10;                  ))}&#10;                &lt;/ul&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;} " />
              <option name="updatedContent" value="import { FaUniversity, FaGraduationCap } from &quot;react-icons/fa&quot;;&#10;&#10;const education = [&#10;&#9;{&#10;&#9;&#9;degree: &quot;Lisans&quot;,&#10;&#9;&#9;status: &quot;Mezun&quot;,&#10;&#9;&#9;field: &quot;Elektrik-Elektronik Mühendisliği (İngilizce)&quot;,&#10;&#9;&#9;school: &quot;İstanbul Bilgi Üniversitesi&quot;,&#10;&#9;&#9;location: &quot;İstanbul, Türkiye&quot;,&#10;&#9;&#9;date: &quot;2014 - 2022&quot;,&#10;&#9;&#9;gpa: &quot;2.57/4.00 GPA&quot;,&#10;&#9;&#9;description: &quot;&quot;,&#10;&#9;&#9;icon: &lt;FaGraduationCap className=&quot;w-7 h-7 text-purple-600&quot; /&gt;,&#10;&#9;},&#10;];&#10;&#10;export default function Education() {&#10;&#9;return (&#10;&#9;&#9;&lt;section id=&quot;education&quot; className=&quot;relative w-full min-h-[60vh] flex flex-col items-center justify-center py-20 px-4 bg-white/80 dark:bg-zinc-900/80 overflow-hidden&quot;&gt;&#10;&#9;&#9;&#9;&lt;div className=&quot;relative z-10 w-full max-w-4xl mx-auto flex flex-col items-center&quot;&gt;&#10;&#9;&#9;&#9;&#9;&lt;h2 className=&quot;text-3xl sm:text-4xl font-extrabold bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 bg-clip-text text-transparent mb-4 text-center drop-shadow-lg&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;Eğitim Hayatım&#10;&#9;&#9;&#9;&#9;&lt;/h2&gt;&#10;&#9;&#9;&#9;&#9;&lt;p className=&quot;text-lg text-gray-700 dark:text-zinc-200 mb-10 text-center max-w-2xl&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;Akademik geçmişim, sertifikalarım ve eğitim faaliyetlerim&#10;&#9;&#9;&#9;&#9;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex flex-col gap-10 w-full&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;{education.map((edu, idx) =&gt; (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;key={idx}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;className=&quot;bg-white/90 dark:bg-zinc-900/90 rounded-2xl shadow-xl p-8 flex flex-col md:flex-row md:items-center gap-6 md:gap-10 border border-zinc-100 dark:border-zinc-800&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex-shrink-0 flex items-center justify-center mb-4 md:mb-0&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{edu.icon}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex-1 flex flex-col gap-1&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;h3 className=&quot;text-xl font-bold text-blue-700 dark:text-blue-300 mb-1&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{edu.degree}{&quot; &quot;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span className=&quot;text-sm font-semibold text-zinc-500 dark:text-zinc-400 ml-2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{edu.status}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/h3&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex flex-wrap items-center gap-2 mb-2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span className=&quot;font-semibold text-zinc-700 dark:text-zinc-200&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{edu.field}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span className=&quot;text-xs px-2 py-1 rounded bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 font-semibold&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{edu.school}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span className=&quot;text-xs px-2 py-1 rounded bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-200 font-semibold&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{edu.location}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span className=&quot;text-xs px-2 py-1 rounded bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-200 font-semibold&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{edu.date}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span className=&quot;text-xs px-2 py-1 rounded bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 font-semibold&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;GPA: {edu.gpa}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p className=&quot;text-zinc-700 dark:text-zinc-200 mb-2&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{edu.description}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;))}&#10;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;{/* Topluluk Faaliyetleri başlığı ve listesi kaldırıldı */}&#10;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&lt;/section&gt;&#10;&#9;);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/components/Skills.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/components/Skills.tsx" />
              <option name="originalContent" value="import MatrixBackground from &quot;./MatrixBackground&quot;;&#10;import { FaReact, FaPython, FaGitAlt } from &quot;react-icons/fa&quot;;&#10;import {&#10;  SiNextdotjs,&#10;  SiTypescript,&#10;  SiTailwindcss,&#10;  SiHtml5,&#10;  SiCss3,&#10;  SiJavascript,&#10;  SiDotnet,&#10;  SiPostgresql,&#10;  SiMysql,&#10;  SiAirtable,&#10;  SiFlutter,&#10;  SiDart,&#10;  SiGithubcopilot,&#10;  SiFigma,&#10;  Si1Dot1Dot1Dot1, SiRider, SiSharp, SiClaude, SiUnity,&#10;  SiDocker,&#10;  SiRedis,&#10;  SiRabbitmq,&#10;  SiMongodb&#10;} from &quot;react-icons/si&quot;;&#10;import { BsFillTerminalFill } from &quot;react-icons/bs&quot;;&#10;import { AiOutlineApi } from &quot;react-icons/ai&quot;;&#10;&#10;const skills = [&#10;  {&#10;    category: &quot;Backend&quot;,&#10;    items: [&#10;      { name: &quot;.NET Core&quot;, icon: &lt;SiDotnet className=&quot;w-5 h-5 text-blue-700&quot; /&gt; },&#10;      { name: &quot;C#&quot;, icon: &lt;SiSharp className=&quot;w-5 h-5 text-purple-700&quot; /&gt; },&#10;      { name: &quot;Python&quot;, icon: &lt;FaPython className=&quot;w-5 h-5 text-yellow-500&quot; /&gt; },&#10;      { name: &quot;RESTful API&quot;, icon: &lt;AiOutlineApi className=&quot;w-5 h-5 text-green-600&quot; /&gt; },&#10;      { name: &quot;Docker&quot;, icon: &lt;SiDocker className=&quot;w-5 h-5 text-blue-500&quot; /&gt; },&#10;      { name: &quot;RabbitMQ&quot;, icon: &lt;SiRabbitmq className=&quot;w-5 h-5 text-orange-500&quot; /&gt; },&#10;      { name: &quot;Kafka&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-yellow-700&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Frontend&quot;,&#10;    items: [&#10;      { name: &quot;React&quot;, icon: &lt;FaReact className=&quot;w-5 h-5 text-blue-500&quot; /&gt; },&#10;      { name: &quot;Next.js&quot;, icon: &lt;SiNextdotjs className=&quot;w-5 h-5 text-zinc-800 dark:text-white&quot; /&gt; },&#10;      { name: &quot;TypeScript&quot;, icon: &lt;SiTypescript className=&quot;w-5 h-5 text-blue-700&quot; /&gt; },&#10;      { name: &quot;Tailwind CSS&quot;, icon: &lt;SiTailwindcss className=&quot;w-5 h-5 text-cyan-400&quot; /&gt; },&#10;      { name: &quot;HTML5&quot;, icon: &lt;SiHtml5 className=&quot;w-5 h-5 text-orange-500&quot; /&gt; },&#10;      { name: &quot;CSS3&quot;, icon: &lt;SiCss3 className=&quot;w-5 h-5 text-blue-600&quot; /&gt; },&#10;      { name: &quot;JavaScript&quot;, icon: &lt;SiJavascript className=&quot;w-5 h-5 text-yellow-400&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Veritabanları&quot;,&#10;    items: [&#10;      { name: &quot;PostgreSQL&quot;, icon: &lt;SiPostgresql className=&quot;w-5 h-5 text-blue-900&quot; /&gt; },&#10;      { name: &quot;MSSQL&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-blue-700&quot; /&gt; },&#10;      { name: &quot;Airtable&quot;, icon: &lt;SiAirtable className=&quot;w-5 h-5 text-yellow-500&quot; /&gt; },&#10;      { name: &quot;MySQL&quot;, icon: &lt;SiMysql className=&quot;w-5 h-5 text-blue-500&quot; /&gt; },&#10;      { name: &quot;MongoDB&quot;, icon: &lt;SiMongodb className=&quot;w-5 h-5 text-green-700&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Mobil&quot;,&#10;    items: [&#10;      { name: &quot;MAUI&quot;, icon: &lt;SiDotnet className=&quot;w-5 h-5 text-cyan-700&quot; /&gt; },&#10;      { name: &quot;Flutter&quot;, icon: &lt;SiFlutter className=&quot;w-5 h-5 text-sky-500&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;AI Araçları&quot;,&#10;    items: [&#10;      { name: &quot;Claude Code&quot;, icon: &lt;SiClaude className=&quot;w-5 h-5 text-green-500&quot; /&gt; },&#10;      { name: &quot;Gemini&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-purple-500&quot; /&gt; },&#10;      { name: &quot;Windsurf&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-blue-400&quot; /&gt; },&#10;      { name: &quot;GitHub Copilot&quot;, icon: &lt;SiGithubcopilot className=&quot;w-5 h-5 text-green-400&quot; /&gt; },&#10;      { name: &quot;Chat GPT&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-emerald-500&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Geliştirme Araçları&quot;,&#10;    items: [&#10;      { name: &quot;Git&quot;, icon: &lt;FaGitAlt className=&quot;w-5 h-5 text-orange-500&quot; /&gt; },&#10;      { name: &quot;Rider&quot;, icon: &lt;SiRider className=&quot;w-5 h-5 text-blue-500&quot; /&gt; },&#10;      { name: &quot;Postman&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-orange-400&quot; /&gt; },&#10;      { name: &quot;Unity&quot;, icon: &lt;SiUnity className=&quot;w-5 h-5 text-pink-500&quot; /&gt; },&#10;      { name: &quot;RedisInsight&quot;, icon: &lt;SiRedis className=&quot;w-5 h-5 text-red-500&quot; /&gt; },&#10;    ],&#10;  },&#10;];&#10;&#10;export default function Skills() {&#10;  return (&#10;    &lt;section id=&quot;skills&quot; className=&quot;relative w-full min-h-[80vh] flex flex-col items-center justify-center py-20 px-4 bg-white/80 dark:bg-zinc-900/80 overflow-hidden&quot;&gt;&#10;      {/* Matrix arka plan */}&#10;      &lt;div className=&quot;absolute inset-0 w-full h-full z-0 pointer-events-none select-none&quot;&gt;&#10;        &lt;MatrixBackground /&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;relative z-10 w-full max-w-5xl mx-auto flex flex-col items-center&quot;&gt;&#10;        &lt;h2 className=&quot;text-3xl sm:text-4xl font-extrabold bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 bg-clip-text text-transparent mb-4 text-center drop-shadow-lg&quot;&gt;&#10;          Teknoloji Yeteneklerim&#10;        &lt;/h2&gt;&#10;        &lt;p className=&quot;text-lg text-gray-700 dark:text-zinc-200 mb-10 text-center max-w-2xl&quot;&gt;&#10;          Modern, ölçeklenebilir uygulamalar geliştirmek için kullandığım teknolojiler ve araçlar&#10;        &lt;/p&gt;&#10;        &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-10 w-full&quot;&gt;&#10;          {skills.map((group) =&gt; (&#10;            &lt;div key={group.category} className=&quot;bg-white/80 dark:bg-zinc-900/80 rounded-xl shadow p-8 flex flex-col items-center gap-6&quot;&gt;&#10;              &lt;h3 className=&quot;text-xl font-bold mb-2 text-zinc-700 dark:text-zinc-200 text-center&quot;&gt;&#10;                {group.category}&#10;              &lt;/h3&gt;&#10;              &lt;div className=&quot;flex flex-wrap justify-center gap-3&quot;&gt;&#10;                {group.items.map((item) =&gt; (&#10;                  &lt;span&#10;                    key={item.name}&#10;                    className=&quot;flex items-center gap-2 px-4 py-2 rounded-full bg-zinc-100 dark:bg-zinc-800 text-zinc-800 dark:text-zinc-100 font-semibold text-sm shadow hover:shadow-lg transition-transform duration-200 hover:scale-105 border border-zinc-200 dark:border-zinc-700&quot;&#10;                  &gt;&#10;                    {item.icon}&#10;                    {item.name}&#10;                  &lt;/span&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import MatrixBackground from &quot;./MatrixBackground&quot;;&#10;import { FaReact, FaPython, FaGitAlt } from &quot;react-icons/fa&quot;;&#10;import {&#10;  SiNextdotjs,&#10;  SiTypescript,&#10;  SiTailwindcss,&#10;  SiHtml5,&#10;  SiCss3,&#10;  SiJavascript,&#10;  SiDotnet,&#10;  SiPostgresql,&#10;  SiMysql,&#10;  SiAirtable,&#10;  SiFlutter,&#10;  SiDart,&#10;  SiGithubcopilot,&#10;  SiFigma,&#10;  Si1Dot1Dot1Dot1, SiRider, SiSharp, SiClaude, SiUnity,&#10;  SiDocker,&#10;  SiRedis,&#10;  SiRabbitmq,&#10;  SiMongodb,&#10;  SiElasticsearch&#10;} from &quot;react-icons/si&quot;;&#10;import { BsFillTerminalFill } from &quot;react-icons/bs&quot;;&#10;import { AiOutlineApi } from &quot;react-icons/ai&quot;;&#10;&#10;const skills = [&#10;  {&#10;    category: &quot;Backend&quot;,&#10;    items: [&#10;      { name: &quot;.NET Core&quot;, icon: &lt;SiDotnet className=&quot;w-5 h-5 text-blue-700&quot; /&gt; },&#10;      { name: &quot;C#&quot;, icon: &lt;SiSharp className=&quot;w-5 h-5 text-purple-700&quot; /&gt; },&#10;      { name: &quot;Python&quot;, icon: &lt;FaPython className=&quot;w-5 h-5 text-yellow-500&quot; /&gt; },&#10;      { name: &quot;RESTful API&quot;, icon: &lt;AiOutlineApi className=&quot;w-5 h-5 text-green-600&quot; /&gt; },&#10;      { name: &quot;Docker&quot;, icon: &lt;SiDocker className=&quot;w-5 h-5 text-blue-500&quot; /&gt; },&#10;      { name: &quot;RabbitMQ&quot;, icon: &lt;SiRabbitmq className=&quot;w-5 h-5 text-orange-500&quot; /&gt; },&#10;      { name: &quot;ElasticSearch&quot;, icon: &lt;SiElasticsearch className=&quot;w-5 h-5 text-orange-700&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Frontend&quot;,&#10;    items: [&#10;      { name: &quot;React&quot;, icon: &lt;FaReact className=&quot;w-5 h-5 text-blue-500&quot; /&gt; },&#10;      { name: &quot;Next.js&quot;, icon: &lt;SiNextdotjs className=&quot;w-5 h-5 text-zinc-800 dark:text-white&quot; /&gt; },&#10;      { name: &quot;TypeScript&quot;, icon: &lt;SiTypescript className=&quot;w-5 h-5 text-blue-700&quot; /&gt; },&#10;      { name: &quot;Tailwind CSS&quot;, icon: &lt;SiTailwindcss className=&quot;w-5 h-5 text-cyan-400&quot; /&gt; },&#10;      { name: &quot;HTML5&quot;, icon: &lt;SiHtml5 className=&quot;w-5 h-5 text-orange-500&quot; /&gt; },&#10;      { name: &quot;CSS3&quot;, icon: &lt;SiCss3 className=&quot;w-5 h-5 text-blue-600&quot; /&gt; },&#10;      { name: &quot;JavaScript&quot;, icon: &lt;SiJavascript className=&quot;w-5 h-5 text-yellow-400&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Veritabanları&quot;,&#10;    items: [&#10;      { name: &quot;PostgreSQL&quot;, icon: &lt;SiPostgresql className=&quot;w-5 h-5 text-blue-900&quot; /&gt; },&#10;      { name: &quot;MSSQL&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-blue-700&quot; /&gt; },&#10;      { name: &quot;Airtable&quot;, icon: &lt;SiAirtable className=&quot;w-5 h-5 text-yellow-500&quot; /&gt; },&#10;      { name: &quot;MySQL&quot;, icon: &lt;SiMysql className=&quot;w-5 h-5 text-blue-500&quot; /&gt; },&#10;      { name: &quot;MongoDB&quot;, icon: &lt;SiMongodb className=&quot;w-5 h-5 text-green-700&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Mobil&quot;,&#10;    items: [&#10;      { name: &quot;MAUI&quot;, icon: &lt;SiDotnet className=&quot;w-5 h-5 text-cyan-700&quot; /&gt; },&#10;      { name: &quot;Flutter&quot;, icon: &lt;SiFlutter className=&quot;w-5 h-5 text-sky-500&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;AI Araçları&quot;,&#10;    items: [&#10;      { name: &quot;Claude Code&quot;, icon: &lt;SiClaude className=&quot;w-5 h-5 text-green-500&quot; /&gt; },&#10;      { name: &quot;Gemini&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-purple-500&quot; /&gt; },&#10;      { name: &quot;Windsurf&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-blue-400&quot; /&gt; },&#10;      { name: &quot;GitHub Copilot&quot;, icon: &lt;SiGithubcopilot className=&quot;w-5 h-5 text-green-400&quot; /&gt; },&#10;      { name: &quot;Chat GPT&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-emerald-500&quot; /&gt; },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Geliştirme Araçları&quot;,&#10;    items: [&#10;      { name: &quot;Git&quot;, icon: &lt;FaGitAlt className=&quot;w-5 h-5 text-orange-500&quot; /&gt; },&#10;      { name: &quot;Rider&quot;, icon: &lt;SiRider className=&quot;w-5 h-5 text-blue-500&quot; /&gt; },&#10;      { name: &quot;Postman&quot;, icon: &lt;BsFillTerminalFill className=&quot;w-5 h-5 text-orange-400&quot; /&gt; },&#10;      { name: &quot;Unity&quot;, icon: &lt;SiUnity className=&quot;w-5 h-5 text-pink-500&quot; /&gt; },&#10;      { name: &quot;RedisInsight&quot;, icon: &lt;SiRedis className=&quot;w-5 h-5 text-red-500&quot; /&gt; },&#10;    ],&#10;  },&#10;];&#10;&#10;export default function Skills() {&#10;  return (&#10;    &lt;section id=&quot;skills&quot; className=&quot;relative w-full min-h-[80vh] flex flex-col items-center justify-center py-20 px-4 bg-white/80 dark:bg-zinc-900/80 overflow-hidden&quot;&gt;&#10;      {/* Matrix arka plan */}&#10;      &lt;div className=&quot;absolute inset-0 w-full h-full z-0 pointer-events-none select-none&quot;&gt;&#10;        &lt;MatrixBackground /&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;relative z-10 w-full max-w-5xl mx-auto flex flex-col items-center&quot;&gt;&#10;        &lt;h2 className=&quot;text-3xl sm:text-4xl font-extrabold bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 bg-clip-text text-transparent mb-4 text-center drop-shadow-lg&quot;&gt;&#10;          Teknoloji Yeteneklerim&#10;        &lt;/h2&gt;&#10;        &lt;p className=&quot;text-lg text-gray-700 dark:text-zinc-200 mb-10 text-center max-w-2xl&quot;&gt;&#10;          Modern, ölçeklenebilir uygulamalar geliştirmek için kullandığım teknolojiler ve araçlar&#10;        &lt;/p&gt;&#10;        &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-10 w-full&quot;&gt;&#10;          {skills.map((group) =&gt; (&#10;            &lt;div key={group.category} className=&quot;bg-white/80 dark:bg-zinc-900/80 rounded-xl shadow p-8 flex flex-col items-center gap-6&quot;&gt;&#10;              &lt;h3 className=&quot;text-xl font-bold mb-2 text-zinc-700 dark:text-zinc-200 text-center&quot;&gt;&#10;                {group.category}&#10;              &lt;/h3&gt;&#10;              &lt;div className=&quot;flex flex-wrap justify-center gap-3&quot;&gt;&#10;                {group.items.map((item) =&gt; (&#10;                  &lt;span&#10;                    key={item.name}&#10;                    className=&quot;flex items-center gap-2 px-4 py-2 rounded-full bg-zinc-100 dark:bg-zinc-800 text-zinc-800 dark:text-zinc-100 font-semibold text-sm shadow hover:shadow-lg transition-transform duration-200 hover:scale-105 border border-zinc-200 dark:border-zinc-700&quot;&#10;                  &gt;&#10;                    {item.icon}&#10;                    {item.name}&#10;                  &lt;/span&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/hooks/useCLI.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/hooks/useCLI.ts" />
              <option name="originalContent" value="'use client';&#10;&#10;import { useState, useCallback, useRef, useEffect } from 'react';&#10;import profileData from '@/data/profile.json';&#10;&#10;export interface CLICommand {&#10;  command: string;&#10;  output: string;&#10;  timestamp: Date;&#10;}&#10;&#10;export interface CLIState {&#10;  isActive: boolean;&#10;  history: CLICommand[];&#10;  currentInput: string;&#10;}&#10;&#10;const COMMANDS = {&#10;  help: () =&gt; `Kullanılabilir komutlar:&#10;  /help          - Bu yardım menüsünü gösterir&#10;  /about         - Hakkımda bilgileri gösterir&#10;  /projects      - Projelerimi listeler&#10;  /skills        - Teknik yeteneklerimi listeler&#10;  /experience    - İş deneyimlerimi gösterir&#10;  /education     - Eğitim bilgilerimi gösterir&#10;  /certificates  - Sertifikalarımı listeler&#10;  /contact       - İletişim bilgilerimi gösterir&#10;  /clear         - Terminal ekranını temizler&#10;  /exit          - CLI modundan çıkar ve normal görünüme döner&#10;  /web           - Normal web görünümüne geç`,&#10;&#10;  about: () =&gt; `${profileData.name}&#10;${profileData.title}&#10;${profileData.location}&#10;&#10;${profileData.about}`,&#10;&#10;  skills: () =&gt; {&#10;    const { frontend, backend, tools } = profileData.skills;&#10;    return ` Frontend: ${frontend.join(', ')}&#10;&#10;⚙️  Backend: ${backend.join(', ')}&#10;&#10;️  Tools &amp; Technologies: ${tools.join(', ')}`;&#10;  },&#10;&#10;  experience: () =&gt; {&#10;    return profileData.experience.map((exp, index) =&gt; &#10;      `${index + 1}. ${exp.role} @ ${exp.org}&#10;    ${exp.start} - ${exp.end}&#10;    ${exp.desc}&#10;`).join('\n');&#10;  },&#10;&#10;  education: () =&gt; {&#10;    return profileData.education.map((edu, index) =&gt;&#10;      `${index + 1}. ${edu.degree}&#10;    ${edu.school}&#10;    ${edu.start} - ${edu.end}&#10;    GPA: ${edu.gpa}&#10;`).join('\n');&#10;  },&#10;&#10;  certificates: () =&gt; {&#10;    return profileData.certificates.map((cert, index) =&gt;&#10;      `${index + 1}. ${cert.title}&#10;    ${cert.issuer}&#10;`).join('\n');&#10;  },&#10;&#10;  contact: () =&gt; {&#10;    const { email, github, linkedin } = profileData.contacts;&#10;    return ` Email: ${email}&#10; GitHub: ${github}&#10; LinkedIn: ${linkedin}`;&#10;  },&#10;&#10;  projects: () =&gt; {&#10;    if (!profileData.projects || profileData.projects.length === 0) {&#10;      return &quot;Kayıtlı proje bulunamadı.&quot;;&#10;    }&#10;    return profileData.projects.map((proj, index) =&gt;&#10;      `${index + 1}. ${proj.title}&#10;   Açıklama: ${proj.description}&#10;   Teknolojiler: ${proj.technologies.join(', ')}`&#10;    ).join('\n');&#10;  },&#10;&#10;  clear: () =&gt; 'CLEAR_COMMAND',&#10;  exit: () =&gt; 'EXIT_COMMAND',&#10;  web: () =&gt; 'EXIT_COMMAND'&#10;};&#10;&#10;export const useCLI = () =&gt; {&#10;  const [state, setState] = useState&lt;CLIState&gt;({&#10;    isActive: false,&#10;    history: [{&#10;      command: '',&#10;      output: `Terminal Modu Aktif &#10;&#10;Eren OĞUZ Portfolio CLI v1.0&#10;Yardım için /help yazın. Normal görünüme dönmek için /exit yazın.`,&#10;      timestamp: new Date()&#10;    }],&#10;    currentInput: ''&#10;  });&#10;&#10;  const inputRef = useRef&lt;HTMLInputElement&gt;(null);&#10;&#10;  const executeCommand = useCallback((input: string) =&gt; {&#10;    const command = input.toLowerCase().trim();&#10;    let output: string;&#10;&#10;    if (command === '' || !command.startsWith('/')) {&#10;      output = 'Komutlar &quot;/&quot; ile başlamalıdır. Yardım için /help yazın.';&#10;    } else {&#10;      const cmd = command.slice(1); // Remove the '/' prefix&#10;      &#10;      if (cmd in COMMANDS) {&#10;        output = COMMANDS[cmd as keyof typeof COMMANDS]();&#10;      } else {&#10;        output = `Bilinmeyen komut: ${command}. Yardım için /help yazın.`;&#10;      }&#10;    }&#10;&#10;    if (output === 'CLEAR_COMMAND') {&#10;      setState(prev =&gt; ({&#10;        ...prev,&#10;        history: [],&#10;        currentInput: ''&#10;      }));&#10;      return;&#10;    }&#10;&#10;    if (output === 'EXIT_COMMAND') {&#10;      setState(prev =&gt; ({&#10;        ...prev,&#10;        isActive: false,&#10;        history: [],&#10;        currentInput: ''&#10;      }));&#10;      return;&#10;    }&#10;&#10;    setState(prev =&gt; ({&#10;      ...prev,&#10;      history: [...prev.history, {&#10;        command: input,&#10;        output,&#10;        timestamp: new Date()&#10;      }],&#10;      currentInput: ''&#10;    }));&#10;  }, []);&#10;&#10;  const setCurrentInput = useCallback((input: string) =&gt; {&#10;    setState(prev =&gt; ({ ...prev, currentInput: input }));&#10;  }, []);&#10;&#10;  // Focus input when needed&#10;  useEffect(() =&gt; {&#10;    if (inputRef.current) {&#10;      inputRef.current.focus();&#10;    }&#10;  }, [state.history]);&#10;&#10;  return {&#10;    state,&#10;    executeCommand,&#10;    setCurrentInput,&#10;    inputRef&#10;  };&#10;};" />
              <option name="updatedContent" value="'use client';&#10;&#10;import { useState, useCallback, useRef, useEffect } from 'react';&#10;import profileData from '@/data/profile.json';&#10;&#10;export interface CLICommand {&#10;  command: string;&#10;  output: string;&#10;  timestamp: Date;&#10;}&#10;&#10;export interface CLIState {&#10;  isActive: boolean;&#10;  history: CLICommand[];&#10;  currentInput: string;&#10;}&#10;&#10;const COMMANDS = {&#10;  help: () =&gt; `Kullanılabilir komutlar:&#10;  /help          - Bu yardım menüsünü gösterir&#10;  /about         - Hakkımda bilgileri gösterir&#10;  /projects      - Projelerimi listeler&#10;  /skills        - Teknik yeteneklerimi listeler&#10;  /experience    - İş deneyimlerimi gösterir&#10;  /education     - Eğitim bilgilerimi gösterir&#10;  /certificates  - Sertifikalarımı listeler&#10;  /contact       - İletişim bilgilerimi gösterir&#10;  /clear         - Terminal ekranını temizler&#10;  /exit          - CLI modundan çıkar ve normal görünüme döner&#10;  /web           - Normal web görünümüne geç`,&#10;&#10;  about: () =&gt; `${profileData.name}&#10;${profileData.title}&#10;${profileData.location}&#10;&#10;${profileData.about}`,&#10;&#10;  skills: () =&gt; {&#10;    const { frontend, backend, tools } = profileData.skills;&#10;    return ` Frontend: ${frontend.join(', ')}&#10;&#10;⚙️  Backend: ${backend.join(', ')}&#10;&#10;️  Tools &amp; Technologies: ${tools.join(', ')}`;&#10;  },&#10;&#10;  experience: () =&gt; {&#10;    return profileData.experience.map((exp, index) =&gt; &#10;      `${index + 1}. ${exp.role} @ ${exp.org}&#10;    ${exp.start} - ${exp.end}&#10;    ${exp.desc}&#10;`).join('\n');&#10;  },&#10;&#10;  education: () =&gt; {&#10;    return profileData.education.map((edu, index) =&gt;&#10;      `${index + 1}. ${edu.degree}&#10;    ${edu.school}&#10;    ${edu.start} - ${edu.end}&#10;    GPA: ${edu.gpa}&#10;`).join('\n');&#10;  },&#10;&#10;  certificates: () =&gt; {&#10;    return profileData.certificates.map((cert, index) =&gt;&#10;      `${index + 1}. ${cert.title}&#10;    ${cert.issuer}&#10;`).join('\n');&#10;  },&#10;&#10;  contact: () =&gt; {&#10;    const { email, github, linkedin } = profileData.contacts;&#10;    return ` Email: ${email}&#10; GitHub: ${github}&#10; LinkedIn: ${linkedin}`;&#10;  },&#10;&#10;  projects: () =&gt; {&#10;    if (!profileData.projects || profileData.projects.length === 0) {&#10;      return &quot;Kayıtlı proje bulunamadı.&quot;;&#10;    }&#10;    return profileData.projects.map((proj, index) =&gt;&#10;      `${index + 1}. ${proj.title}&#10;   Açıklama: ${proj.description}&#10;   Teknolojiler: ${proj.technologies.join(', ')}`&#10;    ).join('\n');&#10;  },&#10;&#10;  clear: () =&gt; 'CLEAR_COMMAND',&#10;  exit: () =&gt; 'EXIT_COMMAND',&#10;  web: () =&gt; 'EXIT_COMMAND'&#10;};&#10;&#10;export const useCLI = () =&gt; {&#10;  const [state, setState] = useState&lt;CLIState&gt;({&#10;    isActive: false,&#10;    history: [{&#10;      command: '',&#10;      output: `Terminal Modu Aktif &#10;&#10;Eren OĞUZ Portfolio CLI v1.0&#10;Yardım için /help yazın. Normal görünüme dönmek için /exit yazın.`,&#10;      timestamp: new Date()&#10;    }],&#10;    currentInput: ''&#10;  });&#10;&#10;  const inputRef = useRef&lt;HTMLInputElement&gt;(null);&#10;&#10;  const executeCommand = useCallback((input: string) =&gt; {&#10;    const command = input.toLowerCase().trim();&#10;    let output: string;&#10;&#10;    if (command === '' || !command.startsWith('/')) {&#10;      output = 'Komutlar &quot;/&quot; ile başlamalıdır. Yardım için /help yazın.';&#10;    } else {&#10;      const cmd = command.slice(1); // Remove the '/' prefix&#10;      &#10;      if (cmd in COMMANDS) {&#10;        output = COMMANDS[cmd as keyof typeof COMMANDS]();&#10;      } else {&#10;        output = `Bilinmeyen komut: ${command}. Yardım için /help yazın.`;&#10;      }&#10;    }&#10;&#10;    if (output === 'CLEAR_COMMAND') {&#10;      setState(prev =&gt; ({&#10;        ...prev,&#10;        history: [],&#10;        currentInput: ''&#10;      }));&#10;      return;&#10;    }&#10;&#10;    if (output === 'EXIT_COMMAND') {&#10;      setState(prev =&gt; ({&#10;        ...prev,&#10;        isActive: false,&#10;        history: [],&#10;        currentInput: ''&#10;      }));&#10;      return;&#10;    }&#10;&#10;    setState(prev =&gt; ({&#10;      ...prev,&#10;      history: [...prev.history, {&#10;        command: input,&#10;        output,&#10;        timestamp: new Date()&#10;      }],&#10;      currentInput: ''&#10;    }));&#10;  }, []);&#10;&#10;  const setCurrentInput = useCallback((input: string) =&gt; {&#10;    setState(prev =&gt; ({ ...prev, currentInput: input }));&#10;  }, []);&#10;&#10;  // Focus input when needed&#10;  useEffect(() =&gt; {&#10;    if (inputRef.current) {&#10;      inputRef.current.focus();&#10;    }&#10;  }, [state.history]);&#10;&#10;  return {&#10;    state,&#10;    executeCommand,&#10;    setCurrentInput,&#10;    inputRef&#10;  };&#10;};" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>